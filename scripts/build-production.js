#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando build de produ√ß√£o...');

try {
  // Limpar diret√≥rio dist
  if (fs.existsSync('dist')) {
    console.log('üßπ Limpando diret√≥rio dist...');
    fs.rmSync('dist', { recursive: true, force: true });
  }

  // Build do cliente
  console.log('üì¶ Build do frontend...');
  execSync('npm run build:client', { stdio: 'inherit' });

  // Copiar arquivos de configura√ß√£o
  console.log('üìã Copiando arquivos de configura√ß√£o...');
  
  // Copiar .htaccess para dist/client
  if (fs.existsSync('public/.htaccess')) {
    fs.copyFileSync('public/.htaccess', 'dist/client/.htaccess');
  }

  // Copiar manifest.json
  if (fs.existsSync('public/manifest.json')) {
    fs.copyFileSync('public/manifest.json', 'dist/client/manifest.json');
  }

  // Criar arquivo de configura√ß√£o para diferentes plataformas
  const deployConfig = {
    netlify: {
      buildCommand: 'npm run build',
      publishDirectory: 'dist/client',
      redirects: [
        { from: '/*', to: '/index.html', status: 200 }
      ]
    },
    vercel: {
      buildCommand: 'npm run build',
      outputDirectory: 'dist/client',
      rewrites: [
        { source: '/(.*)', destination: '/index.html' }
      ]
    },
    hostinger: {
      uploadDirectory: 'dist/client',
      htaccess: true
    }
  };

  fs.writeFileSync(
    'dist/client/deploy-config.json',
    JSON.stringify(deployConfig, null, 2)
  );

  // Criar arquivo de instru√ß√µes de deploy
  const deployInstructions = `# üöÄ Instru√ß√µes de Deploy

## Netlify
1. Conecte seu reposit√≥rio no Netlify
2. Build command: \`npm run build\`
3. Publish directory: \`dist/client\`
4. O arquivo netlify.toml j√° est√° configurado

## Vercel
1. Conecte seu reposit√≥rio no Vercel
2. Framework: Vite
3. Build command: \`npm run build\`
4. Output directory: \`dist/client\`
5. O arquivo vercel.json j√° est√° configurado

## Hostinger
1. Fa√ßa upload dos arquivos da pasta \`dist/client\`
2. O arquivo .htaccess j√° est√° configurado
3. Certifique-se de que o mod_rewrite est√° habilitado

## Vari√°veis de Ambiente
Configure as seguintes vari√°veis de ambiente no seu provedor:
- NODE_ENV=production
- PORT=3001 (se aplic√°vel)

## URLs de API
Para produ√ß√£o, voc√™ precisar√° configurar as URLs das APIs no frontend.
`;

  fs.writeFileSync('dist/client/DEPLOY.md', deployInstructions);

  console.log('‚úÖ Build de produ√ß√£o conclu√≠do!');
  console.log('üìÅ Arquivos gerados em: dist/client/');
  console.log('üìã Instru√ß√µes de deploy em: dist/client/DEPLOY.md');

} catch (error) {
  console.error('‚ùå Erro no build:', error.message);
  process.exit(1);
}